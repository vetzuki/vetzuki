# Must be run from the same VPC as RDS
- hosts: localhost
  vars:
    vetzuki_environment: poc
    vetzuki_go_project: "github.com/vetzuki/vetzuki"
    vetzuki_project_root: "{{ ansible_user_dir }}/development/go/src/{{ vetzuki_go_project }}"
    aws_region: "us-west-2"
    public_ip: "71.204.152.97"
    db_reset: no
    db_seed: no
    tables:
      - name: billing
        columns:
          - id bigserial primary key
          - email text NOT NULL
      - name: employer
        columns:
          - id bigserial primary key
          - name text NOT NULL
          - email text unique NOT NULL
          - billing_email text NOT NULL
          - billing_id bigint references billing(id)
          - billing_state int NOT NULL # 0:Paid, 1:Pending, 2:Owes, 3:Unconfirmed, 4:OneTime
          - created TIMESTAMPTZ NOT NULL DEFAULT NOW()
          - modified TIMESTAMPTZ NOT NULL DEFAULT NOW()
      - name: exam
        columns:
          - id bigserial primary key
          - name text unique # Describes the type of exam
          - description text
          - created TIMESTAMPTZ NOT NULL DEFAULT NOW()
          - modified TIMESTAMPTZ NOT NULL DEFAULT NOW()
      # When an exam or employer are delete, Then delete the employerExam
      - name: employer_exam
        columns:
          - id bigserial primary key
          - exam_id bigint references exam(id) ON DELETE CASCADE
          - employer_id bigint references employer(id) ON DELETE CASCADE
          - created TIMESTAMPTZ NOT NULL DEFAULT NOW()
          - modified TIMESTAMPTZ NOT NULL DEFAULT NOW()
      - name: prospect
        columns:
          - id bigserial primary key
          - name text
          - email text
          - url text unique NOT NULL
          - role text NOT NULL # job role
          - employer_name text NOT NULL 
          - employer_id bigint references employer(id)
          - employer_exam_id bigint references employer_exam(id)
          - created TIMESTAMPTZ NOT NULL DEFAULT NOW()
          - modified TIMESTAMPTZ NOT NULL DEFAULT NOW()
      # When a prospect, employer or employer exam are deleted
      # Then delete the employer prospect
      - name: employer_prospect
        columns:
          - prospect_id bigint references prospect(id) ON DELETE CASCADE
          - employer_id bigint references employer(id) ON DELETE CASCADE
          - employer_exam_id bigint references employer_exam(id) ON DELETE CASCADE
    seeds:
      employer:
        - name: recruiter person
          email: recruiter@employer1.com
          billing_email: ap@employer1.com
          billing_state: 0
      exam:
        - name: exam
          description: Test skills with exam
    db:
      host: localhost
      port: 5432
      username: postgres
      password: vetzuk1p0c
      database: vetzuki
      triggers:
        update_timestamp: update_timestamp.sql

  tasks:
    - pip: name=psycopg2-binary extra_args="--user"
    # Gather RDS connection information
    # - include_role:
    #     name: rds
#    - name: Gather RDS connection information
#      command: 
#        argv:
#          - aws
#          - rds
#          - describe-db-instances
#          - --region
#          - "{{ rds.aws_region }}"
#          # - "--query 'DBInstances[*]'"
#      register: aws_output
#      environment:
#        AWS_ACCESS_KEY_ID: "{{ rds.aws_access_key }}"
#        AWS_SECRET_ACCESS_KEY: "{{ rds.aws_secret_key }}"
#        AWS_REGION: "{{ rds.aws_region }}"
#    - set_fact:
#        rds_instances: "{{ aws_output.stdout | from_json }}"
#    - set_fact:
#        db_host: "{{ rds_instances.DBInstances[0].Endpoint.Address }}"
#        db_port: "{{ rds_instances.DBInstances[0].Endpoint.Port }}"
#    - debug:
#        msg: "Postgres URL: postgres://{{ db.host}}:{{ db.port }}"

    - name: Drop vetzuki database
      when: db_reset
      postgresql_db:
        name: vetzuki
        login_host: "{{ db.host }}"
        port: "{{ db.port }}"
        login_user: "{{ db.username }}"
        login_password: "{{ db.password }}"
        state: absent

    - name: Create vetzuki database
      postgresql_db:
        name: vetzuki
        login_host: "{{ db.host }}"
        port: "{{ db.port }}"
        login_user: "{{ db.username }}"
        login_password: "{{ db.password }}"
    - name: Truncate tables
      when: db_seed and not db_reset
      loop: "{{ tables }}"
      loop_control:
        loop_var: table
      postgresql_query:
        login_host: "{{ db.host }}"
        port: "{{ db.port }}"
        login_user: "{{ db.username }}"
        login_password: "{{ db.password }}"
        db: vetzuki
        query: |
          TRUNCATE TABLE {{ table.name }} CASCADE
    - name: Create tables
      loop: "{{ tables }}"
      loop_control:
        loop_var: table
      postgresql_table:
        login_host: "{{ db.host }}"
        port: "{{ db.port }}"
        login_user: "{{ db.username }}"
        login_password: "{{ db.password }}"
        db: vetzuki
        name: "{{ table.name }}"
        state: present
        columns: "{{ table.columns }}"
    # Create trigger to update modified timestamp on row updates
    - name: Create set timestamp trigger
      when: db_reset
      postgresql_query:
        login_host: "{{ db.host }}"
        port: "{{ db.port }}"
        login_user: "{{ db.username }}"
        login_password: "{{ db.password }}"
        db: vetzuki
        path_to_script: "{{ ansible_env.PWD }}/{{ db.triggers.update_timestamp }}"
    - name: Attach set timestamp trigger
      when: db_reset
      loop: "{{ tables }}"
      loop_control:
        loop_var: table
      postgresql_query:
        login_host: "{{ db.host }}"
        port: "{{ db.port }}"
        login_user: "{{ db.username }}"
        login_password: "{{ db.password }}"
        db: vetzuki
        query: >
          CREATE TRIGGER set_timestamp
          BEFORE UPDATE ON {{ table.name }}
          FOR EACH ROW
          EXECUTE PROCEDURE trigger_set_timestamp();

    - name: Seed employers
      when: db_seed
      loop: "{{ seeds.employer }}"
      loop_control:
        loop_var: employer
      postgresql_query:
        login_host: "{{ db.host }}"
        port: "{{ db.port }}"
        login_user: "{{ db.username }}"
        login_password: "{{ db.password }}"
        db: vetzuki
        query: |
          INSERT INTO employer (name, email, billing_email, billing_state)
          VALUES (%s, %s, %s, %s)
        positional_args:
          - "{{ employer.name }}"
          - "{{ employer.email }}"
          - "{{ employer.billing_email }}"
          - "{{ employer.billing_state }}"
    - name: Seed exams
      when: db_seed
      loop: "{{ seeds.exam }}"
      loop_control:
        loop_var: exam
      postgresql_query:
        login_host: "{{ db.host }}"
        port: "{{ db.port }}"
        login_user: "{{ db.username }}"
        login_password: "{{ db.password }}"
        db: vetzuki
        query: "insert into exam (name, description) values(%s, %s)"
        positional_args:
          - "{{ exam.name }}"
          - "{{ exam.description }}"
    - name: Create .env file
      copy:
        dest: "{{ vetzuki_project_root }}/.env"
        content: |
          LDAP_HOST=localhost:389
          DB_HOST={{ db.host }}
          DB_PORT={{ db.port }}
          DB_NAME={{ db.database }}
          DB_USERNAME={{ db.username }}
          DB_PASSWORD={{ db.password }}
