provider "aws" {
  profile = "webDeployer"
  region = "us-west-2"
  access_key = "{{ deployer.access_key }}"
  secret_key = "{{ deployer.secret_key }}"
}


variable "awsRegion" {
  default = "us-west-2"
}
variable "vetzukiEnvironment" {
  default = "{{ vetzuki_environment }}"
}
variable "apiGatewayStage" {
  default = "{{ vetzuki_environment }}"
}
variable "getProspectLambdaName" {
  default = "getProspect-{{vetzuki_environment }}"
}
variable "db_host" {
  default = "{{ db_host }}"
}
variable "db_port" {
  default = "{{ db_port }}"
}
variable "db_name" {
  default = "{{ db_name }}"
}
variable "db_user" {
  default = "{{ db_user }}"
}
variable "db_password" {
  default = "{{ db_password }}"
}
variable "route53ZoneID" {
  default = "{{ route53.zone_id }}"
}
variable "vpcID" {
  default = "{{ vpc[vetzuki_environment] }}"
}
variable "publicIP" {
  default = "{{ public_ip }}"
}
variable "vpcSubnetA" {
  default = "{{ subnet[vetzuki_environment].a }}"
}
variable "vpcSubnetB" {
  default = "{{ subnet[vetzuki_environment].b }}"
}
variable "acm_certificate_arn" {
  default = "{{ acm_certificate[vetzuki_environment] }}"
}

# Creates the APIGateway environment
resource "aws_api_gateway_rest_api" "api" {
    name = "vetzuki-${var.vetzukiEnvironment}"
    policy = "${file("${var.vetzukiEnvironment}.api_gateway.policy")}"
}
# /p
resource "aws_api_gateway_resource" "prospectResources" {
    path_part = "p"
    parent_id = "${aws_api_gateway_rest_api.api.root_resource_id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}
# /p/*
resource "aws_api_gateway_resource" "prospectResource" {
    path_part = "{prospectURLID}" # pass anything beyond p/ forward
    parent_id = "${aws_api_gateway_resource.prospectResources.id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}

# GET /p/*
resource "aws_api_gateway_method" "getProspectByURL" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.prospectResource.id}"
    http_method = "GET"
    authorization = "NONE"
}
# GET /p/* => Lambda
resource "aws_api_gateway_integration" "getProspectIntegration" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.prospectResource.id}"
    http_method = "${aws_api_gateway_method.getProspectByURL.http_method}"
    integration_http_method = "POST"
    type = "AWS_PROXY"
    uri = "arn:aws:apigateway:${var.awsRegion}:lambda:path/2015-03-31/functions/${aws_lambda_function.getProspectLambda.arn}/invocations"
    depends_on = ["aws_lambda_function.getProspectLambda"]
}

# /api
resource "aws_api_gateway_resource" "apiRoot" {
    path_part = "api"
    parent_id = "${aws_api_gateway_rest_api.api.root_resource_id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}

# /api/prospects
resource "aws_api_gateway_resource" "apiModelProspects" {
    path_part = "prospects"
    parent_id = "${aws_api_gateway_resource.apiRoot.id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}
# POST /api/prospects
resource "aws_api_gateway_method" "createProspectIntegration" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "POST"
    authorization = "NONE"
}
# GET /api/prospects
resource "aws_api_gateway_method" "getProspectsIntegration" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "GET"
    authorization = "NONE"
}
# POST /api/prospects => Lambda
resource "aws_api_gateway_integration" "createProspectIntegration" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "${aws_api_gateway_method.createProspectIntegration.http_method}"
    integration_http_method = "POST"
    type = "AWS_PROXY"
    uri = "arn:aws:apigateway:${var.awsRegion}:lambda:path/2015-03-31/functions/${aws_lambda_function.createProspect.arn}/invocations"
    depends_on = ["aws_lambda_function.createProspect"]
}
# GET /api/prospects => Lambda
resource "aws_api_gateway_integration" "getProspectsIntegration" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "${aws_api_gateway_method.getProspectsIntegration.http_method}"
    integration_http_method = "POST"
    type = "AWS_PROXY"
    uri = "arn:aws:apigateway:${var.awsRegion}:lambda:path/2015-03-31/functions/${aws_lambda_function.getProspects.arn}/invocations"
    depends_on = ["aws_lambda_function.getProspects"]
}

# /api/login
resource "aws_api_gateway_resource" "apiModelEmployerLogin" {
    path_part = "login"
    parent_id = "${aws_api_gateway_resource.apiRoot.id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}
# POST /api/login
resource "aws_api_gateway_method" "employerLoginIntegration" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelEmployerLogin.id}"
    http_method = "POST"
    authorization = "NONE"
}

# POST /api/login => Lambda
resource "aws_api_gateway_integration" "employerLoginIntegration" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelEmployerLogin.id}"
    http_method = "${aws_api_gateway_method.employerLoginIntegration.http_method}"
    integration_http_method = "POST"
    type = "AWS_PROXY"
    uri = "arn:aws:apigateway:${var.awsRegion}:lambda:path/2015-03-31/functions/${aws_lambda_function.employerLogin.arn}/invocations"
    depends_on = ["aws_lambda_function.employerLogin"]
}

##
## CORS configurations ##
##

# OPTIONS /api/prospects
resource "aws_api_gateway_method" "optionsProspects" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "OPTIONS"
    authorization = "NONE"
}
# CORS /api/prospects - enable headers
resource "aws_api_gateway_method_response" "optionsProspects" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "${aws_api_gateway_method.optionsProspects.http_method}"
    status_code = "200"
    response_models = {
      "application/json" = "Empty"
    }
    response_parameters = {
      "method.response.header.Access-Control-Allow-Headers" = true
      "method.response.header.Access-Control-Allow-Methods" = true
      "method.response.header.Access-Control-Allow-Origin" = true
    }
    depends_on = ["aws_api_gateway_method.optionsProspects"]
}
# CORS /api/prospects - handle request
resource "aws_api_gateway_integration" "optionsProspects" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "${aws_api_gateway_method.optionsProspects.http_method}"
    type = "MOCK"
    depends_on = ["aws_api_gateway_method.optionsProspects"]
}
# CORS /api/prospects - set response headers
resource "aws_api_gateway_integration_response" "optionsProspects" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "${aws_api_gateway_method.optionsProspects.http_method}"
    status_code = "${aws_api_gateway_method_response.optionsProspects.status_code}"
    response_parameters = {
      "method.response.header.Access-Control-Allow-Headers" = "'Content-Type,X-Amz-Data,Authorization,X-Api-Key,X-Amz-Security-Token'"
      "method.response.header.Access-Control-Allow-Methods" = "'GET,OPTIONS,POST,PUT'"
      "method.response.header.Access-Control-Allow-Origin" = "'*'"
    }
    depends_on = ["aws_api_gateway_method_response.optionsProspects"]
}

# OPTIONS /api/login
resource "aws_api_gateway_method" "optionsEmployerLogin" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelEmployerLogin.id}"
    http_method = "OPTIONS"
    authorization = "NONE"
}
# CORS /api/login - enable headers
resource "aws_api_gateway_method_response" "optionsEmployerLogin" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelEmployerLogin.id}"
    http_method = "${aws_api_gateway_method.optionsEmployerLogin.http_method}"
    status_code = "200"
    response_models = {
      "application/json" = "Empty"
    }
    response_parameters = {
      "method.response.header.Access-Control-Allow-Headers" = true
      "method.response.header.Access-Control-Allow-Methods" = true
      "method.response.header.Access-Control-Allow-Origin" = true
    }
    depends_on = ["aws_api_gateway_method.optionsEmployerLogin"]
}
# CORS /api/login - handle request
resource "aws_api_gateway_integration" "optionsEmployerLogin" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelEmployerLogin.id}"
    http_method = "${aws_api_gateway_method.optionsEmployerLogin.http_method}"
    type = "MOCK"
    depends_on = ["aws_api_gateway_method.optionsEmployerLogin"]
}
# CORS /api/login - set response headers
resource "aws_api_gateway_integration_response" "optionsEmployerLogin" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelEmployerLogin.id}"
    http_method = "${aws_api_gateway_method.optionsEmployerLogin.http_method}"
    status_code = "${aws_api_gateway_method_response.optionsEmployerLogin.status_code}"
    response_parameters = {
      "method.response.header.Access-Control-Allow-Headers" = "'Content-Type,X-Amz-Data,Authorization,X-Api-Key,X-Amz-Security-Token'"
      "method.response.header.Access-Control-Allow-Methods" = "'GET,OPTIONS,POST,PUT'"
      "method.response.header.Access-Control-Allow-Origin" = "'*'"
    }
    depends_on = ["aws_api_gateway_method_response.optionsEmployerLogin"]
}

# Create API Gateway stage
# There's a bug which makes this redundant and cause an error.
#resource "aws_api_gateway_stage" "{{ vetzuki_environment }}" {
#  stage_name = "${var.vetzukiEnvironment}"
#  rest_api_id = "${aws_api_gateway_rest_api.api.id}"
#  deployment_id = "${aws_api_gateway_deployment.api.id}"
#}

# Deploy API to {{ vetzuki_environment }} stage
resource "aws_api_gateway_deployment" "api" {
  depends_on = [
    "aws_api_gateway_integration.getProspectIntegration",
    "aws_api_gateway_integration.createProspectIntegration",
    "aws_api_gateway_integration.employerLoginIntegration",
    "aws_api_gateway_integration.optionsEmployerLogin",
    "aws_api_gateway_integration.optionsProspects"
  ]
  rest_api_id = "${aws_api_gateway_rest_api.api.id}"
  stage_name = "${var.vetzukiEnvironment}"
}