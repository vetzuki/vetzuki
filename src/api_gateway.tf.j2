provider "aws" {
  profile = "webDeployer"
  region = "us-west-2"
  access_key = "{{ deployer.access_key }}"
  secret_key = "{{ deployer.secret_key }}"
}


variable "awsRegion" {
  default = "us-west-2"
}
variable "vetzukiEnvironment" {
  default = "{{ vetzuki_environment }}"
}
variable "apiGatewayStage" {
  default = "{{ vetzuki_environment }}"
}
variable "getProspectLambdaName" {
  default = "getProspect-{{vetzuki_environment }}"
}
variable "db_host" {
  default = "{{ db_host }}"
}
variable "db_port" {
  default = "{{ db_port }}"
}
variable "db_name" {
  default = "{{ db_name }}"
}
variable "db_user" {
  default = "{{ db_user }}"
}
variable "db_password" {
  default = "{{ db_password }}"
}
variable "route53ZoneID" {
  default = "{{ route53.zone_id }}"
}
variable "vpcID" {
  default = "{{ vpc[vetzuki_environment] }}"
}
variable "publicIP" {
  default = "{{ public_ip }}"
}
variable "vpcSubnetA" {
  default = "{{ subnet[vetzuki_environment].a }}"
}
variable "vpcSubnetB" {
  default = "{{ subnet[vetzuki_environment].b }}"
}
variable "acm_certificate_arn" {
  default = "{{ acm_certificate[vetzuki_environment] }}"
}

# Creates the APIGateway environment
resource "aws_api_gateway_rest_api" "api" {
    name = "vetzuki-${var.vetzukiEnvironment}"
    policy = "${file("${var.vetzukiEnvironment}.api_gateway.policy")}"
}

# GET /
resource "aws_api_gateway_method" "root" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_rest_api.api.root_resource_id}"
    http_method = "GET"
    authorization = "NONE"
}
resource "aws_api_gateway_method_response" "root_200" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_rest_api.api.root_resource_id}"
    http_method = "${aws_api_gateway_method.root.http_method}"
    status_code = "200"
    response_parameters = {
      "method.response.header.Content-Type" = true
    }
}
resource "aws_api_gateway_integration_response" "root_200" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_rest_api.api.root_resource_id}"
    http_method = "${aws_api_gateway_method.root.http_method}"
    status_code = "${aws_api_gateway_method_response.root_200.status_code}"
    response_parameters = {
      "method.response.header.Content-Type" = "integration.response.header.Content-Type"
    }
}

# GET / => S3://www.{{ vetzuki_environment }}.vetzuki.com/index.html
resource "aws_api_gateway_integration" "root" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_rest_api.api.root_resource_id}"
    http_method = "${aws_api_gateway_method.root.http_method}"
    integration_http_method = "GET"
    type = "AWS"
    # connection_type = "VPC_LINK"
    # connection_id = "${aws_vpc_endpoint.s3.id}"
    uri = "arn:aws:apigateway:us-west-2:s3:path/www.${var.vetzukiEnvironment}.vetzuki.com/index.html"
    # uri = "arn:aws:s3:::www.${var.vetzukiEnvironment}.vetzuki.com"
    credentials = "${aws_iam_role.getUIResourcesRole.arn}"
    depends_on = [
        "aws_vpc_endpoint.s3",
        "aws_vpc_endpoint_route_table_association.s3EndpointRoutes",
        "aws_api_gateway_method.root"
    ]
}
# /callback
resource "aws_api_gateway_resource" "callback" {
    path_part = "callback"
    parent_id = "${aws_api_gateway_rest_api.api.root_resource_id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}
resource "aws_api_gateway_method" "callback" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.callback.id}"
    http_method = "GET"
    authorization = "NONE"
}
resource "aws_api_gateway_method_response" "callback_200" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.callback.id}"
    http_method = "${aws_api_gateway_method.callback.http_method}"
    status_code = "200"
    response_parameters = {
      "method.response.header.Content-Type" = true
    }
}
resource "aws_api_gateway_integration_response" "callback_200" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.callback.id}"
    http_method = "${aws_api_gateway_method.callback.http_method}"
    status_code = "${aws_api_gateway_method_response.callback_200.status_code}"
    response_parameters = {
      "method.response.header.Content-Type" = "integration.response.header.Content-Type"
    }
}

# GET /callback => S3://www.{{ vetzuki_environment }}.vetzuki.com/callback
resource "aws_api_gateway_integration" "callback" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.callback.id}"
    http_method = "${aws_api_gateway_method.callback.http_method}"
    integration_http_method = "GET"
    type = "AWS"
    uri = "arn:aws:apigateway:us-west-2:s3:path/www.${var.vetzukiEnvironment}.vetzuki.com/index.html"
    credentials = "${aws_iam_role.getUIResourcesRole.arn}"
    depends_on = [
        "aws_vpc_endpoint.s3",
        "aws_vpc_endpoint_route_table_association.s3EndpointRoutes",
        "aws_api_gateway_method.callback"
    ]
}
# /css
resource "aws_api_gateway_resource" "cssRoot" {
    path_part = "css"
    parent_id = "${aws_api_gateway_rest_api.api.root_resource_id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}
# /css/{cssFile}
resource "aws_api_gateway_resource" "css" {
  path_part = "{cssFile}"
  parent_id = "${aws_api_gateway_resource.cssRoot.id}"
  rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}
resource "aws_api_gateway_method" "css" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.css.id}"
    http_method = "GET"
    authorization = "NONE"
    request_parameters = {
      "method.request.path.cssFile" = true
    }
}
resource "aws_api_gateway_method_response" "css_200" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.css.id}"
    http_method = "${aws_api_gateway_method.css.http_method}"
    status_code = "200"
    response_parameters = {
      "method.response.header.Content-Type" = true
    }
}
resource "aws_api_gateway_integration_response" "css_200" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.css.id}"
    http_method = "${aws_api_gateway_method.css.http_method}"
    status_code = "${aws_api_gateway_method_response.css_200.status_code}"
    response_parameters = {
      "method.response.header.Content-Type" = "integration.response.header.Content-Type"
    }
}

# GET /css/{cssFile} => S3://www.{{ vetzuki_environment }}.vetzuki.com/css/{cssFile}
resource "aws_api_gateway_integration" "css" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.css.id}"
    http_method = "${aws_api_gateway_method.css.http_method}"
    integration_http_method = "GET"
    type = "AWS"
    uri = "arn:aws:apigateway:us-west-2:s3:path/www.${var.vetzukiEnvironment}.vetzuki.com/css/{cssFile}"
    credentials = "${aws_iam_role.getUIResourcesRole.arn}"
    request_parameters = {
      "integration.request.path.cssFile" = "method.request.path.cssFile"
    }
    depends_on = [
        "aws_vpc_endpoint.s3",
        "aws_vpc_endpoint_route_table_association.s3EndpointRoutes",
        "aws_api_gateway_method.css"
    ]
}

# /js
resource "aws_api_gateway_resource" "jsRoot" {
    path_part = "js"
    parent_id = "${aws_api_gateway_rest_api.api.root_resource_id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}
# /js/{jsFile}
resource "aws_api_gateway_resource" "js" {
  path_part = "{jsFile}"
  parent_id = "${aws_api_gateway_resource.jsRoot.id}"
  rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}
resource "aws_api_gateway_method" "js" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.js.id}"
    http_method = "GET"
    authorization = "NONE"
    request_parameters = {
      "method.request.path.jsFile" = true
    }
}
resource "aws_api_gateway_method_response" "js_200" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.js.id}"
    http_method = "${aws_api_gateway_method.js.http_method}"
    status_code = "200"
    response_parameters = {
      "method.response.header.Content-Type" = true
    }
}
resource "aws_api_gateway_integration_response" "js_200" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.js.id}"
    http_method = "${aws_api_gateway_method.js.http_method}"
    status_code = "${aws_api_gateway_method_response.js_200.status_code}"
    response_parameters = {
      "method.response.header.Content-Type" = "integration.response.header.Content-Type"
    }
}

# GET /js/{jsFile} => S3://www.{{ vetzuki_environment }}.vetzuki.com/js/{jsFile}
resource "aws_api_gateway_integration" "js" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.js.id}"
    http_method = "${aws_api_gateway_method.js.http_method}"
    integration_http_method = "GET"
    type = "AWS"
    uri = "arn:aws:apigateway:us-west-2:s3:path/www.${var.vetzukiEnvironment}.vetzuki.com/js/{jsFile}"
    credentials = "${aws_iam_role.getUIResourcesRole.arn}"
    request_parameters = {
      "integration.request.path.jsFile" = "method.request.path.jsFile"
    }
    depends_on = [
        "aws_vpc_endpoint.s3",
        "aws_vpc_endpoint_route_table_association.s3EndpointRoutes",
        "aws_api_gateway_method.js"
    ]
}

# /p
resource "aws_api_gateway_resource" "prospectResources" {
    path_part = "p"
    parent_id = "${aws_api_gateway_rest_api.api.root_resource_id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}
# /p/*
resource "aws_api_gateway_resource" "prospectResource" {
    path_part = "{prospectURLID}" # pass anything beyond p/ forward
    parent_id = "${aws_api_gateway_resource.prospectResources.id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}

# GET /p/*
resource "aws_api_gateway_method" "getProspectByURL" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.prospectResource.id}"
    http_method = "GET"
    authorization = "NONE"
}
# GET /p/* => Lambda
resource "aws_api_gateway_integration" "getProspect" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.prospectResource.id}"
    http_method = "${aws_api_gateway_method.getProspectByURL.http_method}"
    integration_http_method = "POST"
    type = "AWS_PROXY"
    uri = "arn:aws:apigateway:${var.awsRegion}:lambda:path/2015-03-31/functions/${aws_lambda_function.getProspectLambda.arn}/invocations"
    depends_on = ["aws_lambda_function.getProspectLambda"]
}

# /api
resource "aws_api_gateway_resource" "apiRoot" {
    path_part = "api"
    parent_id = "${aws_api_gateway_rest_api.api.root_resource_id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}

# /api/exams
resource "aws_api_gateway_resource" "examResources" {
    path_part = "exams"
    parent_id = "${aws_api_gateway_resource.apiRoot.id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}

# /api/exams/{prospectURLID}
resource "aws_api_gateway_resource" "examResource" {
    path_part = "{prospectURLID}" # pass anything beyond forward
    parent_id = "${aws_api_gateway_resource.examResources.id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}

# PUT /api/exams/{prospectURLID}
resource "aws_api_gateway_method" "updateExamResource" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.examResource.id}"
    http_method = "PUT"
    authorization = "NONE"
}

# PUT /api/exams/{prospectURLID} => Lambda
resource "aws_api_gateway_integration" "updateExamState" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.examResource.id}"
    http_method = "${aws_api_gateway_method.updateExamResource.http_method}"
    integration_http_method = "POST"
    type = "AWS_PROXY"
    uri = "arn:aws:apigateway:${var.awsRegion}:lambda:path/2015-03-31/functions/${aws_lambda_function.updateExamState.arn}/invocations"
    depends_on = ["aws_lambda_function.updateExamState"]
}

# /api/prospects
resource "aws_api_gateway_resource" "apiModelProspects" {
    path_part = "prospects"
    parent_id = "${aws_api_gateway_resource.apiRoot.id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}

# POST /api/prospects
resource "aws_api_gateway_method" "createProspect" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "POST"
    authorization = "NONE"
}
# GET /api/prospects
resource "aws_api_gateway_method" "getProspects" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "GET"
    authorization = "NONE"
}
# POST /api/prospects => Lambda
resource "aws_api_gateway_integration" "createProspect" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "${aws_api_gateway_method.createProspect.http_method}"
    integration_http_method = "POST"
    type = "AWS_PROXY"
    uri = "arn:aws:apigateway:${var.awsRegion}:lambda:path/2015-03-31/functions/${aws_lambda_function.createProspect.arn}/invocations"
    depends_on = ["aws_lambda_function.createProspect"]
}
# GET /api/prospects => Lambda
resource "aws_api_gateway_integration" "getProspects" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "${aws_api_gateway_method.getProspects.http_method}"
    integration_http_method = "POST"
    type = "AWS_PROXY"
    uri = "arn:aws:apigateway:${var.awsRegion}:lambda:path/2015-03-31/functions/${aws_lambda_function.getProspects.arn}/invocations"
    depends_on = ["aws_lambda_function.getProspects"]
}

# /api/login
resource "aws_api_gateway_resource" "apiModelEmployerLogin" {
    path_part = "login"
    parent_id = "${aws_api_gateway_resource.apiRoot.id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}
# POST /api/login
resource "aws_api_gateway_method" "employerLogin" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelEmployerLogin.id}"
    http_method = "POST"
    authorization = "NONE"
}

# POST /api/login => Lambda
resource "aws_api_gateway_integration" "employerLogin" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelEmployerLogin.id}"
    http_method = "${aws_api_gateway_method.employerLogin.http_method}"
    integration_http_method = "POST"
    type = "AWS_PROXY"
    uri = "arn:aws:apigateway:${var.awsRegion}:lambda:path/2015-03-31/functions/${aws_lambda_function.employerLogin.arn}/invocations"
    depends_on = ["aws_lambda_function.employerLogin"]
}

# /api/scores
resource "aws_api_gateway_resource" "scoreResources" {
    path_part = "scores"
    parent_id = "${aws_api_gateway_resource.apiRoot.id}"
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
}

# POST /api/scores
resource "aws_api_gateway_method" "createScore" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.scoreResources.id}"
    http_method = "POST"
    authorization = "NONE"
}

# POST /api/scores => Lambda
resource "aws_api_gateway_integration" "createScore" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.scoreResources.id}"
    http_method = "${aws_api_gateway_method.createScore.http_method}"
    integration_http_method = "POST"
    type = "AWS_PROXY"
    uri = "arn:aws:apigateway:${var.awsRegion}:lambda:path/2015-03-31/functions/${aws_lambda_function.createScore.arn}/invocations"
    depends_on = ["aws_lambda_function.createScore"]
}

##
## CORS configurations ##
##

# OPTIONS /api/prospects
resource "aws_api_gateway_method" "CORSOptionsProspects" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "OPTIONS"
    authorization = "NONE"
}
# CORS /api/prospects - enable headers
resource "aws_api_gateway_method_response" "CORSOptionsProspects" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "${aws_api_gateway_method.CORSOptionsProspects.http_method}"
    status_code = "200"
    response_models = {
      "application/json" = "Empty"
    }
    response_parameters = {
      "method.response.header.Access-Control-Allow-Headers" = true
      "method.response.header.Access-Control-Allow-Methods" = true
      "method.response.header.Access-Control-Allow-Origin" = true
    }
    depends_on = ["aws_api_gateway_method.CORSOptionsProspects"]
}
# CORS /api/prospects - handle request
resource "aws_api_gateway_integration" "CORSOptionsProspects" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "${aws_api_gateway_method.CORSOptionsProspects.http_method}"
    type = "MOCK"
    depends_on = ["aws_api_gateway_method.CORSOptionsProspects"]
}
# CORS /api/prospects - set response headers
resource "aws_api_gateway_integration_response" "CORSOptionsProspects" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelProspects.id}"
    http_method = "${aws_api_gateway_method.CORSOptionsProspects.http_method}"
    status_code = "${aws_api_gateway_method_response.CORSOptionsProspects.status_code}"
    response_parameters = {
      "method.response.header.Access-Control-Allow-Headers" = "'Content-Type,X-Amz-Data,Authorization,X-Api-Key,X-Amz-Security-Token'"
      "method.response.header.Access-Control-Allow-Methods" = "'GET,OPTIONS,POST,PUT'"
      "method.response.header.Access-Control-Allow-Origin" = "'*'"
    }
    depends_on = ["aws_api_gateway_method_response.CORSOptionsProspects"]
}

# OPTIONS /api/login
resource "aws_api_gateway_method" "CORSEmployerLogin" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelEmployerLogin.id}"
    http_method = "OPTIONS"
    authorization = "NONE"
}
# CORS /api/login - enable headers
resource "aws_api_gateway_method_response" "CORSEmployerLogin" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelEmployerLogin.id}"
    http_method = "${aws_api_gateway_method.CORSEmployerLogin.http_method}"
    status_code = "200"
    response_models = {
      "application/json" = "Empty"
    }
    response_parameters = {
      "method.response.header.Access-Control-Allow-Headers" = true
      "method.response.header.Access-Control-Allow-Methods" = true
      "method.response.header.Access-Control-Allow-Origin" = true
    }
    depends_on = ["aws_api_gateway_method.CORSEmployerLogin"]
}
# CORS /api/login - handle request
resource "aws_api_gateway_integration" "CORSEmployerLogin" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelEmployerLogin.id}"
    http_method = "${aws_api_gateway_method.CORSEmployerLogin.http_method}"
    type = "MOCK"
    depends_on = ["aws_api_gateway_method.CORSEmployerLogin"]
}
# CORS /api/login - set response headers
resource "aws_api_gateway_integration_response" "CORSEmployerLogin" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.apiModelEmployerLogin.id}"
    http_method = "${aws_api_gateway_method.CORSEmployerLogin.http_method}"
    status_code = "${aws_api_gateway_method_response.CORSEmployerLogin.status_code}"
    response_parameters = {
      "method.response.header.Access-Control-Allow-Headers" = "'Content-Type,X-Amz-Data,Authorization,X-Api-Key,X-Amz-Security-Token'"
      "method.response.header.Access-Control-Allow-Methods" = "'GET,OPTIONS,POST,PUT'"
      "method.response.header.Access-Control-Allow-Origin" = "'*'"
    }
    depends_on = ["aws_api_gateway_method_response.CORSEmployerLogin"]
}

# OPTIONS /api/exams
resource "aws_api_gateway_method" "CORSOptionsExams" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.examResources.id}"
    http_method = "OPTIONS"
    authorization = "NONE"
}
# CORS /api/exams - enable headers
resource "aws_api_gateway_method_response" "CORSOptionsExams" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.examResources.id}"
    http_method = "${aws_api_gateway_method.CORSOptionsExams.http_method}"
    status_code = "200"
    response_models = {
      "application/json" = "Empty"
    }
    response_parameters = {
      "method.response.header.Access-Control-Allow-Headers" = true
      "method.response.header.Access-Control-Allow-Methods" = true
      "method.response.header.Access-Control-Allow-Origin" = true
    }
    depends_on = ["aws_api_gateway_method.CORSOptionsExams"]
}
# CORS /api/exams - handle request
resource "aws_api_gateway_integration" "CORSOptionsExams" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.examResources.id}"
    http_method = "${aws_api_gateway_method.CORSOptionsExams.http_method}"
    type = "MOCK"
    depends_on = ["aws_api_gateway_method.CORSOptionsExams"]
}
# CORS /api/exams - set response headers
resource "aws_api_gateway_integration_response" "CORSOptionsExams" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.examResources.id}"
    http_method = "${aws_api_gateway_method.CORSOptionsExams.http_method}"
    status_code = "${aws_api_gateway_method_response.CORSOptionsExams.status_code}"
    response_parameters = {
      "method.response.header.Access-Control-Allow-Headers" = "'Content-Type,X-Amz-Data,Authorization,X-Api-Key,X-Amz-Security-Token'"
      "method.response.header.Access-Control-Allow-Methods" = "'GET,OPTIONS,POST,PUT'"
      "method.response.header.Access-Control-Allow-Origin" = "'*'"
    }
    depends_on = ["aws_api_gateway_method_response.CORSOptionsExams"]
}

# OPTIONS /api/exams/{prospectURLID}
resource "aws_api_gateway_method" "CORSOptionsExam" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.examResource.id}"
    http_method = "OPTIONS"
    authorization = "NONE"
}
# CORS /api/exams/{prospectURLID} - enable headers
resource "aws_api_gateway_method_response" "CORSOptionsExam" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.examResource.id}"
    http_method = "${aws_api_gateway_method.CORSOptionsExam.http_method}"
    status_code = "200"
    response_models = {
      "application/json" = "Empty"
    }
    response_parameters = {
      "method.response.header.Access-Control-Allow-Headers" = true
      "method.response.header.Access-Control-Allow-Methods" = true
      "method.response.header.Access-Control-Allow-Origin" = true
    }
    depends_on = ["aws_api_gateway_method.CORSOptionsExam"]
}
# CORS /api/exams/{prospectURLID} - handle request
resource "aws_api_gateway_integration" "CORSOptionsExam" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.examResource.id}"
    http_method = "${aws_api_gateway_method.CORSOptionsExam.http_method}"
    type = "MOCK"
    depends_on = ["aws_api_gateway_method.CORSOptionsExam"]
}
# CORS /api/exams/{prospectURLID} - set response headers
resource "aws_api_gateway_integration_response" "CORSOptionsExam" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.examResource.id}"
    http_method = "${aws_api_gateway_method.CORSOptionsExam.http_method}"
    status_code = "${aws_api_gateway_method_response.CORSOptionsExam.status_code}"
    response_parameters = {
      "method.response.header.Access-Control-Allow-Headers" = "'Content-Type,X-Amz-Data,Authorization,X-Api-Key,X-Amz-Security-Token'"
      "method.response.header.Access-Control-Allow-Methods" = "'GET,OPTIONS,POST,PUT'"
      "method.response.header.Access-Control-Allow-Origin" = "'*'"
    }
    depends_on = ["aws_api_gateway_method_response.CORSOptionsExam"]
}

# OPTIONS /api/scores
resource "aws_api_gateway_method" "CORSOptionsScores" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.scoreResources.id}"
    http_method = "OPTIONS"
    authorization = "NONE"
}
# CORS /api/scores - enable headers
resource "aws_api_gateway_method_response" "CORSOptionsScores" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.scoreResources.id}"
    http_method = "${aws_api_gateway_method.CORSOptionsScores.http_method}"
    status_code = "200"
    response_models = {
      "application/json" = "Empty"
    }
    response_parameters = {
      "method.response.header.Access-Control-Allow-Headers" = true
      "method.response.header.Access-Control-Allow-Methods" = true
      "method.response.header.Access-Control-Allow-Origin" = true
    }
    depends_on = ["aws_api_gateway_method.CORSOptionsScores"]
}
# CORS /api/scores - handle request
resource "aws_api_gateway_integration" "CORSOptionsScores" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.scoreResources.id}"
    http_method = "${aws_api_gateway_method.CORSOptionsScores.http_method}"
    type = "MOCK"
    depends_on = ["aws_api_gateway_method.CORSOptionsScores"]
}
# CORS /api/scores - set response headers
resource "aws_api_gateway_integration_response" "CORSOptionsScores" {
    rest_api_id = "${aws_api_gateway_rest_api.api.id}"
    resource_id = "${aws_api_gateway_resource.scoreResources.id}"
    http_method = "${aws_api_gateway_method.CORSOptionsScores.http_method}"
    status_code = "${aws_api_gateway_method_response.CORSOptionsScores.status_code}"
    response_parameters = {
      "method.response.header.Access-Control-Allow-Headers" = "'Content-Type,X-Amz-Data,Authorization,X-Api-Key,X-Amz-Security-Token'"
      "method.response.header.Access-Control-Allow-Methods" = "'GET,OPTIONS,POST,PUT'"
      "method.response.header.Access-Control-Allow-Origin" = "'*'"
    }
    depends_on = ["aws_api_gateway_method_response.CORSOptionsScores"]
}

# Create API Gateway stage
# There's a bug which makes this redundant and cause an error.
#resource "aws_api_gateway_stage" "{{ vetzuki_environment }}" {
#  stage_name = "${var.vetzukiEnvironment}"
#  rest_api_id = "${aws_api_gateway_rest_api.api.id}"
#  deployment_id = "${aws_api_gateway_deployment.api.id}"
#}

# Deploy API to {{ vetzuki_environment }} stage
resource "aws_api_gateway_deployment" "api" {
  depends_on = [
    "aws_api_gateway_integration.getProspect",
    "aws_api_gateway_integration.getProspects",
    "aws_api_gateway_integration.createProspect",
    "aws_api_gateway_integration.createScore",
    "aws_api_gateway_integration.employerLogin",
    "aws_api_gateway_integration.updateExamState",
    "aws_api_gateway_integration.CORSEmployerLogin",
    "aws_api_gateway_integration.CORSOptionsProspects",
    "aws_api_gateway_integration.CORSOptionsScores",
    "aws_api_gateway_rest_api.api" # To ensure the policy is in place
  ]
  rest_api_id = "${aws_api_gateway_rest_api.api.id}"
  stage_name = "${var.vetzukiEnvironment}"
}